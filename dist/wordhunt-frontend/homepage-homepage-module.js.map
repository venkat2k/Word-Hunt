{"version":3,"sources":["./src/app/homepage/components/leaderboard/leaderboard.component.ts","./src/app/homepage/components/leaderboard/leaderboard.component.html","./src/app/homepage/homepage-routing.module.ts","./src/app/homepage/homepage.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/components/card/card.component.ts","./src/app/homepage/components/card/card.component.html","./src/app/homepage/homepage.module.ts","./src/app/homepage/components/rules/rules.component.ts","./src/app/homepage/components/rules/rules.component.html"],"names":[],"mappings":"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","file":"homepage-homepage-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.scss']\n})\nexport class LeaderboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class='leaderboard'>\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomepageComponent } from './homepage.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomepageComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomepageRoutingModule { }\n","<div class=\"cardContainer\">\r\n    <app-card id='rulesCard' cardTitle='RULES' cardIcon='fa fa-list' (click)='showRules=true; hideBackground()'></app-card>\r\n    <app-card id='playCard' cardTitle='PLAY' cardIcon='fa fa-play' (click)='startPlay=true; hideBackground()'></app-card>\r\n    <app-card id='leaderboardCard' cardTitle='STANDINGS' cardIcon='fa fa-trophy' (click)='showLeaderboard=true; hideBackground()'></app-card>\r\n</div>\r\n<app-rules *ngIf='showRules'></app-rules>\r\n<app-leaderboard *ngIf='showLeaderboard'></app-leaderboard>\r\n<div class=\"popupContainer\" *ngIf='startPlay'>\r\n    <div class=\"playerDetails\">\r\n        <span>What's your name?</span>\r\n        <input type=\"text\" [(ngModel)]='playerName' required />\r\n        <button (click)='startGame()'>START</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { GameplayService } from '../core/services/gameplay.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent implements OnInit {\n  // cardDetails: any;\n  title: string;\n  showRules = false;\n  showLeaderboard = false;\n  startPlay = false;\n  playerName = '';\n  constructor(private gameplayService: GameplayService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n  test() {\n    console.log(this.showRules);\n  }\n  startGame() {\n    localStorage.setItem('playerName', this.playerName);\n    this.gameplayService.getGameDetails().subscribe(\n      (data) => {\n        let gameId = data[\"gameId\"];\n        this.router.navigate(['play/' + gameId.toString()]);\n      }\n    )\n  }\n  closeRules() {\n    this.showRules = false;\n  }\n  hideBackground() {\n    let container = Array.from(document.getElementsByClassName(\"cardContainer\") as HTMLCollectionOf <HTMLElement>);\n    container[0].style.filter = 'blur(2em)';\n    container[0].style.pointerEvents = 'none';\n    let rulesContainer = Array.from(document.getElementsByClassName(\"rulesContainer\") as HTMLCollectionOf <HTMLElement>);\n    rulesContainer[0].style.display = 'block';\n  }\n}\n\n\n// reroute to new url think about making service call there.","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() cardTitle: string;\n  @Input() cardIcon: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // this.cardTitle = 'hello';\n    // this.cardIcon = 'hey';\n  }\n\n}\n","<div class=\"card\">\n    <span>{{ cardTitle }}</span>\n    <i [ngClass]='cardIcon'></i>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomepageRoutingModule } from './homepage-routing.module';\nimport { HomepageComponent } from './homepage.component';\nimport { CardComponent } from './components/card/card.component';\nimport { RulesComponent } from './components/rules/rules.component';\nimport { LeaderboardComponent } from './components/leaderboard/leaderboard.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    HomepageComponent,\n    CardComponent,\n    RulesComponent,\n    LeaderboardComponent,\n  ],\n  imports: [\n    CommonModule,\n    HomepageRoutingModule,\n    FormsModule,\n  ]\n})\nexport class HomepageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HomepageComponent } from '../../homepage.component';\n\n@Component({\n  selector: 'app-rules',\n  templateUrl: './rules.component.html',\n  styleUrls: ['./rules.component.scss']\n})\nexport class RulesComponent implements OnInit {\n\n  constructor(private homepage: HomepageComponent) { }\n\n  ngOnInit(): void {\n  }\n  closeRules() {\n    this.homepage.closeRules();\n    let homeContainer = Array.from(document.getElementsByClassName(\"cardContainer\") as HTMLCollectionOf <HTMLElement>);\n    homeContainer[0].style.filter = 'blur(0em)';\n    homeContainer[0].style.pointerEvents = 'all';\n  }\n}\n","<div class=\"rulesContainer\">\n    <i class=\"fa fa-close\" (click)='closeRules()'></i>\n    <ul id=\"ruleList\">\n        <li>Word-Hunt is a game where you have to find a hidden word with strategic guesses. </li>\n        <li>At the start of a game, the system chooses a 4-letter word. This word contains only english alphabets\n            and letters do not repeat in this word. </li>\n            <li>You will make 4-letter word guesses and for each guess you'll receive one of the below verdicts -\n                <ul>\n                    <li>If your guess is valid, you'll get the number of correctly placed and misplaced letters.</li>\n                <li>Your guess is invalid.</li>\n            </ul>\n        </li>\n        <li>For example, let the hidden word be \"race\".\n            <ul>\n                <li>If your guess is \"cars\", the number of correctly placed letters is 1 - 'a', number of misplaced letters is 2 - 'r' and 'c' \n                    are in the word but in wrong places.\n                </li>\n                <li>If your guess is \"rare\" or \"eat\", it is invalid. The guess should have exactly 4 unique letters.</li>\n            </ul>\n        </li>\n        <li>You start with a score of 100 and for each guess, your score decreases by 2. The game ends when you correctly find the word or when your score becomes 0.</li>\n    </ul>\n</div>"],"sourceRoot":"webpack:///"}